PARSER_BEGIN(Programa)
import java.util.logging.*;
import java.io.*;
import java.util.ArrayList;
public class Programa
{
  /*public static void main( String args []) throws ParseException{
    try
    {
      Programa analizador = new Programa( System.in );
      analizador.Iniciar();
      System.out.println("La cadena fue aceptada correctamente");
    }
    catch(ParseException e)
    {
      System.out.println(e.getMessage());
      System.out.println("Hubo un error y la cadena no fue acepatada");
    }
  }*/
  
    public static void main(String[] args) {
		try {
            Programa analizador = new Programa(new BufferedReader(new FileReader("./expresiones.txt")));
            analizador.Iniciar();
        } catch (ParseException e) {
            System.err.println(e.getMessage());
        }
        catch (FileNotFoundException e) {
            System.err.println(e.getMessage());
        } 
         catch(TokenMgrError e){
            System.err.println(e.getMessage());
        }
    }
}
PARSER_END(Programa)

/**Tokens que seran ignorados durante el analisis*/
SKIP : {
      " "
    | "\t"
    | "\r"
    | "\n"
	| <"//" (~["\n", "\r"])*>
}

//Declaracion de tokens
//Token para impresion de caractreres
TOKEN : {
	<IMPRESION:"print"|"println"|"printf"|"WriteLine"|"Write"|"puts"|"show"|"putStrLn"|"putStr"|"echo"|"cout">{System.out.println("IMPRESION -> "+image);}
}

//Token para operadores realcionales
TOKEN : {
	<OPERADORRELACIONAL:"=="|"!="|"<="|">="|"<"|">">{System.out.println("OPERADORRELACIONAL -> "+image);}
}

//Token para la caputa de datos
TOKEN : {
	<CAPTURARDATO:"getchar"|"getch"|"ReadLine"|"Read"|"gets"|"nextLine"|"input"|"cin">{System.out.println("CAPTURARDATO -> "+image);}
}

//Token para operaciones con caracter
TOKEN : {
	<OPERACIONESCARACTER:"atoi"|"isalnum"|"isalpha"|"islower"|"isupper"|"isdigit"|"isspace"|"isblank"|"tolower"|"toupper">{System.out.println("OPERACIONESCARACTER -> "+image);}
}

//Token para manejo de archivos
TOKEN : {
	<ABRIRARCHIVO:"fopen">{System.out.println("ABRIRARCHIVO");}
	|<CERRARARCHIVO:"fclose">{System.out.println("CERRARARCHIVO");}
	|<RENOMBRARARCHIVO:"rename">{System.out.println("RENOMBRARARCHIVO");}
	|<REMOVERARCHIVO:"remove">{System.out.println("REMOVERARCHIVO");}
	|<ARCHIVOTEMPORAL:"tmpfile">{System.out.println("ARCHIVOTEMPORAL");}
	|<LEERARCHIVO:"fscanf">{System.out.println("LEERARCHIVO");}
	|<IMPRIMIRARCHIVO:"fprintf">{System.out.println("IMPRIMIRARCHIVO");}
}

//Token para limpiar el buffer
TOKEN : {
	<LIMPIARBUFFER:"fflush">{System.out.println("LIMPIARBUFFER");}
}

//Token para operaciones con String
TOKEN : {
	<COPIARCADENA:"strcpy">{System.out.println("COPIARCADENA");}
	|<COMPARARCADENA:"strcmp">{System.out.println("COMPARARCADENA");}
	|<ENCONTRARCADENA:"strfind">{System.out.println("ENCONTRARCADENA");}
	|<CONCATENARCADENA:"strcat">{System.out.println("CONCATENARCADENA");}
	|<LONGITUDCADENA:"strlen">{System.out.println("LONGITUDCADENA");}
}

//Token para operaciones matematicas
TOKEN : {
	<MENORENTERO:"ceiling">{System.out.println("MENORENTERO");}
	|<FUNCIONBESSEL:"jn">{System.out.println("FFUNCIONBESSEL");}
	|<LOGARITMO:"log"|"log10">{System.out.println("LOGARITMO -> "+image);}
	|<RAIZ:"sqrt">{System.out.println("RAIZ");}
	|<POTENCIA:"pow">{System.out.println("PPOTENCIA");}
	|<EXPONENCIAL:"exp">{System.out.println("EEXPONENCIAL");}
	|<FUNCIONESTRIGONOMETRICAS:"cos"|"sin"|"tan">{System.out.println("FUNCIONESTRIGONOMETRICAS -> "+image);}
	|<FUNCIONESTRIGONOMETRICASINV:"acos"|"asin"|"atan">{System.out.println("FUNCIONESTRIGONOMETRICASINV -> "+image);}
	|<TRUNCARVALOR:"trunc">{System.out.println("TRUNCARVALOR");}
	|<REDONDEONUMERO:"ceil"|"floor"|"round">{System.out.println("REDONDEONUMERO -> "+image);}
	|<NUMEROALEATORIO:"rand">{System.out.println("NUMEROALEATORIO");}
	|<VALORABSOLUTO:"abs"|"labs">{System.out.println("VALORABSOLUTO -> "+image);}
}

//Token para operaciones de memoria
TOKEN : {
	<ASIGNARMEMORIA:"malloc"|"realloc"|"calloc">{System.out.println("ASIGNARMEMORIA -> "+image);}
	|<LIBERARMEMORIA:"free">{System.out.println("LIBERARMEMORIA ");}
}

//Token para simbolos
TOKEN : {
	<PARENTESISAPERTURA:"(">{System.out.println("PARENTESISAPERTURA");}
	|<PARENTESISCERRADURA:")">{System.out.println("PARENTESISCERRADURA");}
	|<LLAVEAPERTURA:"{">{System.out.println("LLAVEAPERTURA");}
	|<LLAVECERRADURA:"}">{System.out.println("LLAVECERRADURA");}
	|<CORCHETEAPERTURA:"[">{System.out.println("CORCHETEAPERTURA");}
	|<CORCHETECERRADURA:"]">{System.out.println("CORCHETECERRADURA");}
	|<PUNTO:".">{System.out.println("PUNTO");}
	|<COMA:",">{System.out.println("COMA");}
	|<SEMICOLON:";">{System.out.println("SEMICOLON");}
}

//Token para operacion de dormir
TOKEN : {
	<DORMIR:"sleep">{System.out.println("DORMIR");}
}

//Token para delay
TOKEN : {
	<RETRASAR:"delay">{System.out.println("RETRASAR");}
}

//Token para diectorio
TOKEN : {
	<DIRECTORIO:"dir">{System.out.println("DIRECTORIO");}
}

//Token para llamar una funcion
TOKEN : {
	<LLAMAR:"call">{System.out.println("LLAMAR");}
}

//Token para modulo
TOKEN : {
	<MODULO:"module">{System.out.println("MODULO");}
}

//Token para declarar un tipo nuevo
TOKEN : {
	<NUEVOTIPO:"newType">{System.out.println("NUEVOTIPO");}
}

//Token para lista
TOKEN : {
	<LISTA:"List">{System.out.println("LISTA"+image);}
	|<PRIMEROLISTA:"first"|"head">{System.out.println("PRIMEROLISTA -> "+image);}
	|<ULTIMOLISTA:"last"|"tail">{System.out.println("ULTIMOLISTA -> "+image);}
}

//Token para tupla
TOKEN : {
	<TUPLA:"tuple">{System.out.println("TUPLA");}
}

//Token para pulsos de reloj
TOKEN : {
	<PULSOSDERELOJ:"clock">{System.out.println("PULSOSDERELOJ");}
}

//Token para opreciones de string a numero
TOKEN : {
	<OPERACIONESSTRINGNUMERO:"atol"|"strtod"|"atof"|"strtol"|"strtoll"|"strtoull">{System.out.println("OPERACIONESSTRINGNUMERO -> "+image);}
}

//Token para ordenar 
TOKEN : {
	<ORDENAR:"sort">{System.out.println("ORDENAR");}
}

//Token para rango
TOKEN : {
	<RANGO:"range">{System.out.println("RANGO");}
}

//Token para operaciones con bits
TOKEN : {
	<OPERACIONESBIT:">>"|"<<"|"~">{System.out.println("OPERACIONESBIT -> "+image);}
}

//Token para ayuda
TOKEN : {
	<AYUDA:"help">{System.out.println("AYUDA");}
}

//Token para metodo quicksort
TOKEN : {
	<QUICKSORT:"qsort">{System.out.println("QUICKSORT");}
}

//Token para cola
TOKEN : {
	<COLA:"queue">{System.out.println("COLA");}
}

//Token para funciones del cronometro
TOKEN : {
	<INICIOCRONOMETRO:"tic">{System.out.println("INICIOCRONOMETRO");}
	|<FINCRONOMETRO:"toc">{System.out.println("FINCRONOMETRO");}
}

//Token para set y get
TOKEN : {
	<OBTENER:"get">{System.out.println("OBTENER");}
	|<ASIGNAR:"set">{System.out.println("ASIGNAR");}
}

//Token para Sockets
TOKEN : {
	<SOCKET:"Socket">{System.out.println("SOCKET");}
	|<SERVIDORSOCKET:"ServerSocket">{System.out.println("SERVIDORSOCKET");}
}

//Token para entrada de datos
TOKEN : {
	<ENTRADADATOS:"InputStream">{System.out.println("ENTRADADATOS");}
}

//TOken para salida de datos en el cliente
TOKEN : {
	<SALIDADATOSCLIENTE:"OutputStream">{System.out.println("SALIDADATOSCLIENTE");}
}

TOKEN : {
	<SALIDADATOS:"DataOutputStream">{System.out.println("SALIDADATOS");}
}

//Token para funcion de remplazar
TOKEN : {
	<REMPLAZAR:"replace">{System.out.println("REMPLAZAR");}
}

//Token para convertir
TOKEN : {
	<CONVERTIR:"Convert">{System.out.println("CONVERTIR");}
}

//Token para longitud
TOKEN : {
	<LONGITUD:"length">{System.out.println("LONGITUD");}
}

//Token para operaciones de la pila
TOKEN : {
	<PILA:"stack">{System.out.println("PILA");}
	|<METERDATOPILA:"push">{System.out.println("METERDATOPILA");}
	|<SACARDATOPILA:"pop">{System.out.println("SACARDATOPILA");}
	|<CLONARPILA:"clone">{System.out.println("CLONARPILA");}
}

//Token para MCD
TOKEN : {
	<MCD:"gcd">{System.out.println("MCD");}
}

//Token para MCM
TOKEN : {
	<MCM:"lcm">{System.out.println("MCM");}
}

//Token para analizar gramatica
TOKEN : {
	<ANALIZAGRAMATICA:"Parse">{System.out.println("ANALIZAGRAMATICA");}
}

//Token para even
TOKEN : {
	<PAR:"even">{System.out.println("PAR");}
}

//Token para funcion de peternece
TOKEN : {
	<PERTENECE:"elem">{System.out.println("PERTENECE");}
}

//Token para all
TOKEN : {
	<TODOS:"all">{System.out.println("TODOS");}
}

//Token para any
TOKEN : {
	<ALGUNO:"any">{System.out.println("ALGUNO");}
}

//Token para identificador
TOKEN: {
	  <IDENTIFICADOR:(["a"-"z","A"-"Z"]) (["0"-"9","_","a"-"z","A"-"Z"])*>
	  /*{System.out.println("IDENTIFICADOR\t"+image);}*/
}

void Iniciar() :
{
	Token t = null;
	ArrayList<String> NombreVariables = new ArrayList<String>();
	int contador = 0;
	String nombre;
}
{
	(
	<CAPTURARDATO>|<OPERACIONESCARACTER>|<ABRIRARCHIVO>|<CERRARARCHIVO>|<RENOMBRARARCHIVO>|
	<REMOVERARCHIVO>|<ARCHIVOTEMPORAL>|<LEERARCHIVO>|<IMPRIMIRARCHIVO>|<LIMPIARBUFFER>|
	<COPIARCADENA>|<COMPARARCADENA>|<ENCONTRARCADENA>|<CONCATENARCADENA>|<LONGITUDCADENA>|
	<MENORENTERO>|<FUNCIONBESSEL>|<LOGARITMO>|<RAIZ>|<POTENCIA>|<EXPONENCIAL>|<FUNCIONESTRIGONOMETRICAS>|
	<FUNCIONESTRIGONOMETRICASINV>|<TRUNCARVALOR>|<REDONDEONUMERO>|<NUMEROALEATORIO>|<VALORABSOLUTO>|
	<ASIGNARMEMORIA>|<LIBERARMEMORIA>|<PARENTESISAPERTURA>|<PARENTESISCERRADURA>|<LLAVEAPERTURA>|<LLAVECERRADURA>|
	<CORCHETEAPERTURA>|<CORCHETECERRADURA>|<PUNTO>|<COMA>|<SEMICOLON>|<DORMIR>|<RETRASAR>|<DIRECTORIO>|
	<LLAMAR>|<MODULO>|<NUEVOTIPO>|<LISTA>|<PRIMEROLISTA>|<ULTIMOLISTA>|<TUPLA>|<PULSOSDERELOJ>|
	<OPERACIONESSTRINGNUMERO>|<ORDENAR>|<RANGO>|<OPERACIONESBIT>|<AYUDA>|<QUICKSORT>|<COLA>|<INICIOCRONOMETRO>|
	<FINCRONOMETRO>|<OBTENER>|<ASIGNAR>|<SOCKET>|<SERVIDORSOCKET>|<ENTRADADATOS>|<SALIDADATOSCLIENTE>|
	<SALIDADATOS>|<REMPLAZAR>|<CONVERTIR>|<LONGITUD>|<PILA>|<METERDATOPILA>|<SACARDATOPILA>|<CLONARPILA>|
	<MCD>|<MCM>|<ANALIZAGRAMATICA>|<PAR>|<PERTENECE>|<TODOS>|<OPERADORRELACIONAL>|<IMPRESION>|<ALGUNO>|t = <IDENTIFICADOR>
	{
		nombre = t.image;
		if(!NombreVariables.contains(nombre)) {
			NombreVariables.add(nombre);
			contador++;
		}
	System.out.println("IDENTIFICADOR -> "+NombreVariables.indexOf(nombre));}
	)*
}