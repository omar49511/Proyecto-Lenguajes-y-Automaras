/* Generated By:JavaCC: Do not edit this line. ProgramaConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProgramaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IMPRESION = 6;
  /** RegularExpression Id. */
  int OPERADORRELACIONAL = 7;
  /** RegularExpression Id. */
  int CAPTURARDATO = 8;
  /** RegularExpression Id. */
  int OPERACIONESCARACTER = 9;
  /** RegularExpression Id. */
  int ABRIRARCHIVO = 10;
  /** RegularExpression Id. */
  int CERRARARCHIVO = 11;
  /** RegularExpression Id. */
  int RENOMBRARARCHIVO = 12;
  /** RegularExpression Id. */
  int REMOVERARCHIVO = 13;
  /** RegularExpression Id. */
  int ARCHIVOTEMPORAL = 14;
  /** RegularExpression Id. */
  int LEERARCHIVO = 15;
  /** RegularExpression Id. */
  int IMPRIMIRARCHIVO = 16;
  /** RegularExpression Id. */
  int LIMPIARBUFFER = 17;
  /** RegularExpression Id. */
  int COPIARCADENA = 18;
  /** RegularExpression Id. */
  int COMPARARCADENA = 19;
  /** RegularExpression Id. */
  int ENCONTRARCADENA = 20;
  /** RegularExpression Id. */
  int CONCATENARCADENA = 21;
  /** RegularExpression Id. */
  int LONGITUDCADENA = 22;
  /** RegularExpression Id. */
  int MENORENTERO = 23;
  /** RegularExpression Id. */
  int FUNCIONBESSEL = 24;
  /** RegularExpression Id. */
  int LOGARITMO = 25;
  /** RegularExpression Id. */
  int RAIZ = 26;
  /** RegularExpression Id. */
  int POTENCIA = 27;
  /** RegularExpression Id. */
  int EXPONENCIAL = 28;
  /** RegularExpression Id. */
  int FUNCIONESTRIGONOMETRICAS = 29;
  /** RegularExpression Id. */
  int FUNCIONESTRIGONOMETRICASINV = 30;
  /** RegularExpression Id. */
  int TRUNCARVALOR = 31;
  /** RegularExpression Id. */
  int REDONDEONUMERO = 32;
  /** RegularExpression Id. */
  int NUMEROALEATORIO = 33;
  /** RegularExpression Id. */
  int VALORABSOLUTO = 34;
  /** RegularExpression Id. */
  int ASIGNARMEMORIA = 35;
  /** RegularExpression Id. */
  int LIBERARMEMORIA = 36;
  /** RegularExpression Id. */
  int PARENTESISAPERTURA = 37;
  /** RegularExpression Id. */
  int PARENTESISCERRADURA = 38;
  /** RegularExpression Id. */
  int LLAVEAPERTURA = 39;
  /** RegularExpression Id. */
  int LLAVECERRADURA = 40;
  /** RegularExpression Id. */
  int CORCHETEAPERTURA = 41;
  /** RegularExpression Id. */
  int CORCHETECERRADURA = 42;
  /** RegularExpression Id. */
  int PUNTO = 43;
  /** RegularExpression Id. */
  int COMA = 44;
  /** RegularExpression Id. */
  int SEMICOLON = 45;
  /** RegularExpression Id. */
  int DORMIR = 46;
  /** RegularExpression Id. */
  int RETRASAR = 47;
  /** RegularExpression Id. */
  int DIRECTORIO = 48;
  /** RegularExpression Id. */
  int LLAMAR = 49;
  /** RegularExpression Id. */
  int MODULO = 50;
  /** RegularExpression Id. */
  int NUEVOTIPO = 51;
  /** RegularExpression Id. */
  int LISTA = 52;
  /** RegularExpression Id. */
  int PRIMEROLISTA = 53;
  /** RegularExpression Id. */
  int ULTIMOLISTA = 54;
  /** RegularExpression Id. */
  int TUPLA = 55;
  /** RegularExpression Id. */
  int PULSOSDERELOJ = 56;
  /** RegularExpression Id. */
  int OPERACIONESSTRINGNUMERO = 57;
  /** RegularExpression Id. */
  int ORDENAR = 58;
  /** RegularExpression Id. */
  int RANGO = 59;
  /** RegularExpression Id. */
  int OPERACIONESBIT = 60;
  /** RegularExpression Id. */
  int AYUDA = 61;
  /** RegularExpression Id. */
  int QUICKSORT = 62;
  /** RegularExpression Id. */
  int COLA = 63;
  /** RegularExpression Id. */
  int INICIOCRONOMETRO = 64;
  /** RegularExpression Id. */
  int FINCRONOMETRO = 65;
  /** RegularExpression Id. */
  int OBTENER = 66;
  /** RegularExpression Id. */
  int ASIGNAR = 67;
  /** RegularExpression Id. */
  int SOCKET = 68;
  /** RegularExpression Id. */
  int SERVIDORSOCKET = 69;
  /** RegularExpression Id. */
  int ENTRADADATOS = 70;
  /** RegularExpression Id. */
  int SALIDADATOSCLIENTE = 71;
  /** RegularExpression Id. */
  int SALIDADATOS = 72;
  /** RegularExpression Id. */
  int REMPLAZAR = 73;
  /** RegularExpression Id. */
  int CONVERTIR = 74;
  /** RegularExpression Id. */
  int LONGITUD = 75;
  /** RegularExpression Id. */
  int PILA = 76;
  /** RegularExpression Id. */
  int METERDATOPILA = 77;
  /** RegularExpression Id. */
  int SACARDATOPILA = 78;
  /** RegularExpression Id. */
  int CLONARPILA = 79;
  /** RegularExpression Id. */
  int MCD = 80;
  /** RegularExpression Id. */
  int MCM = 81;
  /** RegularExpression Id. */
  int ANALIZAGRAMATICA = 82;
  /** RegularExpression Id. */
  int PAR = 83;
  /** RegularExpression Id. */
  int PERTENECE = 84;
  /** RegularExpression Id. */
  int TODOS = 85;
  /** RegularExpression Id. */
  int ALGUNO = 86;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 87;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<IMPRESION>",
    "<OPERADORRELACIONAL>",
    "<CAPTURARDATO>",
    "<OPERACIONESCARACTER>",
    "\"fopen\"",
    "\"fclose\"",
    "\"rename\"",
    "\"remove\"",
    "\"tmpfile\"",
    "\"fscanf\"",
    "\"fprintf\"",
    "\"fflush\"",
    "\"strcpy\"",
    "\"strcmp\"",
    "\"strfind\"",
    "\"strcat\"",
    "\"strlen\"",
    "\"ceiling\"",
    "\"jn\"",
    "<LOGARITMO>",
    "\"sqrt\"",
    "\"pow\"",
    "\"exp\"",
    "<FUNCIONESTRIGONOMETRICAS>",
    "<FUNCIONESTRIGONOMETRICASINV>",
    "\"trunc\"",
    "<REDONDEONUMERO>",
    "\"rand\"",
    "<VALORABSOLUTO>",
    "<ASIGNARMEMORIA>",
    "\"free\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"sleep\"",
    "\"delay\"",
    "\"dir\"",
    "\"call\"",
    "\"module\"",
    "\"newType\"",
    "\"List\"",
    "<PRIMEROLISTA>",
    "<ULTIMOLISTA>",
    "\"tuple\"",
    "\"clock\"",
    "<OPERACIONESSTRINGNUMERO>",
    "\"sort\"",
    "\"range\"",
    "<OPERACIONESBIT>",
    "\"help\"",
    "\"qsort\"",
    "\"queue\"",
    "\"tic\"",
    "\"toc\"",
    "\"get\"",
    "\"set\"",
    "\"Socket\"",
    "\"ServerSocket\"",
    "\"InputStream\"",
    "\"OutputStream\"",
    "\"DataOutputStream\"",
    "\"replace\"",
    "\"Convert\"",
    "\"length\"",
    "\"stack\"",
    "\"push\"",
    "\"pop\"",
    "\"clone\"",
    "\"gcd\"",
    "\"lcm\"",
    "\"Parse\"",
    "\"even\"",
    "\"elem\"",
    "\"all\"",
    "\"any\"",
    "<IDENTIFICADOR>",
  };

}
